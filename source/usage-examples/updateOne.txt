=================
Update a Document
=================

.. default-domain:: mongodb

You can update a document in a collection by using the ``Collection.UpdateOne()``
method. 

This example passes a query filter and an update parameter to the
``UpdateOne()`` method. The query filter specifies the document to
match, while the update parameter specifies the change to
make to the document. The following code example calls the
``UpdateOne()`` method on a document matched by its ``id`` field from
the ``restaurants`` collection to create a new field called
``avg_rating`` with a value of 4.4:

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /code-snippets/updateOne.go
   :language: go

.. note::

   If the query filter does not match any documents, the operation will
   return a result with a ``MatchedCount`` property of 0. If the filter
   matches multiple documents, the method will select and update one document.

Expected Output
---------------

When executed against a MongoDB cluster loaded with the sample data,
this example should produce the following output:

.. code-block:: none
    
   1 document was updated.

If you execute a :doc:`find
</fundamentals/crud/read-operations/retrieve/#find>` operation querying
for the same ``id`` value used in the example, you should see that the
matched document now includes the ``avg_rating`` field.

Additional Information
----------------------

For more information on using query filters with the Go Driver,
see the :doc:`query specification guide
</fundamentals/crud/query-document/>`.

For more information on update operators,
see the :manual:`MongoDB update operator reference documentation
</reference/operator/update/#update-operators>`.

API Documentation
~~~~~~~~~~~~~~~~~

- :go-api:`UpdateOne() <mongo#Collection.UpdateOne>`
- :go-api:`UpdateResult <mongo#UpdateResult>`
